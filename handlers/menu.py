from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from database.methods.user import create_user, has_premium
from states.state import MenuState

router = Router()


# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –Ω–∞ /start
@router.message(CommandStart())
async def welcome(message: Message, state: FSMContext):
    await message.delete()
    await create_user(user_id=message.from_user.id, name=message.from_user.full_name)
    await set_menu_message(message, state)


# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –ø–æ –∫–æ–ª–±—ç–∫
@router.callback_query(F.data == 'menu')
async def menu(callback: CallbackQuery, state: FSMContext):
    await set_menu_message(callback.message, state)


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –º–µ–Ω—é
async def set_menu_message(
        message: Message,
        state: FSMContext
) -> int:
    await state.set_state(MenuState.main)
    premium = await has_premium(message.chat.id)

    m = await message.bot.send_message(
        text=__create_main_menu_text__(premium),
        chat_id=message.chat.id,
        reply_markup=__create_main_menu_keyboard__(premium)
    )
    return m.message_id


# –§—É–Ω–∫—Ü–∏–∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è menu
def __create_main_menu_text__(premium: bool) -> str:
    if premium:
        status = 'ü•á Pro –≤–µ—Ä—Å–∏—è GigaChat'
    else:
        status = 'üß© –û–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è GigaChat'

    return (f'‚ú® ------====== –ú–ï–ù–Æ ======------ ‚ú®\n\n{status}\n\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å GigaChat –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä'
            f' –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ ‚öôÔ∏è)')


def __create_main_menu_keyboard__(premium: bool) -> InlineKeyboardMarkup:
    middle_row = [InlineKeyboardButton(text='üõ†Ô∏è –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='help')]

    if not premium:
        middle_row.append(InlineKeyboardButton(text='üí∏ –ö—É–ø–∏—Ç—å GigaChat Pro', callback_data='payments'))

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='settings')],
            middle_row,
            [InlineKeyboardButton(text='‚ú® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è GigaChat', callback_data='ask')],
        ]
    )